---
name: Deploy

# yamllint disable-line rule:truthy
on:
  release:
    types:
      - released
  workflow_run:
    workflows: [ "CI" ]
    branches: [ main ]
    types:
      - completed
  workflow_dispatch:

jobs:
  information:
    if: |
      github.event_name == 'release'
      || (
        github.event_name == 'workflow_run'
        && github.event.workflow_run.conclusion == 'success'
      )
      || (
        github.event_name == 'workflow_dispatch'
      )
    name: ℹ️ Gather add-on information
    runs-on: ubuntu-latest
    outputs:
      description: ${{ steps.information.outputs.description }}
      environment: ${{ steps.release.outputs.environment }}
      name: ${{ steps.information.outputs.name }}
      target: ${{ steps.prepare.outputs.target }}
      version: ${{ steps.release.outputs.version }}
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v3
      - name: 🎯 Determine target add-on
        id: prepare
        run: |
          target="ps5-mqtt-edge"
          if [[ "${{ github.event_name }}" = "release" ]]; then
            target="ps5-mqtt"
          fi
          echo "::set-output name=target::${target}"
      - name: ⏭ Copy add-on files
        run: |
          cp add-ons/common/Dockerfile add-ons/${{ steps.prepare.outputs.target }}
          cp add-ons/common/build.yaml add-ons/${{ steps.prepare.outputs.target }}
          cp add-ons/common/.dockerignore add-ons/${{ steps.prepare.outputs.target }}
      - name: 🚀 Run add-on information action
        id: information
        uses: frenck/action-addon-information@v1.4
        with:
          path: "./add-ons/${{ steps.prepare.outputs.target }}"
      - name: ℹ️ Gather version and environment
        id: release
        run: |
          environment="edge"
          version="edge"
          if [[ "${{ github.event_name }}" = "release" ]]; then
            version="${{ github.event.release.tag_name }}"
            version="${version,,}"
            version="${version#v}"
            environment="stable"
          fi
          echo "::set-output name=environment::${environment}"
          echo "::set-output name=version::${version}"

  deploy:
    name: 👷 Build & Deploy ${{ matrix.arch }}
    needs: information
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.information.outputs.environment }}
    strategy:
      matrix:
        arch: ["aarch64", "amd64", "armhf", "armv7", "i386"]

    steps:
    - name: ⤵ Check out repository
      uses: actions/checkout@v3.0.2
      
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        registry-url: https://registry.npmjs.org/
        cache-dependency-path: ./ps5-mqtt/package-lock.json
        cache: 'npm'
        
    - name: ⏬ Install dependencies
      working-directory: ./ps5-mqtt
      run: npm ci
      
    - name: 👨‍🏭 Build App
      working-directory: ./ps5-mqtt
      run: npm run build

    - name: ⏭ Copy App Files
      run: |
        cp -R ps5-mqtt add-ons/${{ needs.information.outputs.target }}
        cp add-ons/common/Dockerfile add-ons/${{ needs.information.outputs.target }}
        cp add-ons/common/build.yaml add-ons/${{ needs.information.outputs.target }}
        cp add-ons/common/.dockerignore add-ons/${{ needs.information.outputs.target }}

    - name: 🔐 Login to GitHub Container Registry
      uses: docker/login-action@v2.0.0
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🏭 [EDGE] Build & Publish add-on ${{ needs.information.outputs.target }}-${{ matrix.arch }}
      uses: home-assistant/builder@2023.09.0
      if: needs.information.outputs.environment == 'edge'
      with:
        args: |
          ${{ env.BUILD_ARGS }} \
          --${{ matrix.arch }} \
          --target /data/add-ons/${{ needs.information.outputs.target }} \
          --version ${{ needs.information.outputs.version }} \
          --image "ps5-mqtt/${{ matrix.arch }}" \
          --docker-hub "ghcr.io/${{ github.repository_owner }}" \
          --no-latest \
          --addon
          
    - name: 🏭 [STABLE] Build & Publish add-on ${{ needs.information.outputs.target }}-${{ matrix.arch }}
      uses: home-assistant/builder@2023.09.0
      if: needs.information.outputs.environment == 'stable'
      with:
        args: |
          ${{ env.BUILD_ARGS }} \
          --${{ matrix.arch }} \
          --target /data/add-ons/${{ needs.information.outputs.target }} \
          --version ${{ needs.information.outputs.version }} \
          --image "ps5-mqtt/${{ matrix.arch }}" \
          --docker-hub "ghcr.io/${{ github.repository_owner }}" \
          --addon

  update_release_files:
    name: ⤴ Update release files
    if: needs.information.outputs.environment == 'stable'
    needs:
      - information
      - deploy
    environment:
      name: ${{ needs.information.outputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: ⤵ Checkout repo
        uses: actions/checkout@v3

      - name: ✍ Update add-on config
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'add-ons/ps5-mqtt/config.yaml'
          propertyPath: 'version'
          value: ${{ needs.information.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          createPR: false
          commitChange: false
          updateFile: true

      - name: ✍ Update changelog
        uses: stefanzweifel/changelog-updater-action@v1
        with:
          latest-version: ${{ needs.information.outputs.version }}
          release-notes: ${{ github.event.release.body }}
          path-to-changelog: 'add-ons/ps5-mqtt/CHANGELOG.md'

      - name: 🙌 Commit updated changelog and add-on config
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: main
          commit_message: >
            🎉 Release version ${{needs.information.outputs.version}}
          
            [skip-ci]
          file_pattern: add-ons/ps5-mqtt/CHANGELOG.md add-ons/ps5-mqtt/config.yaml
